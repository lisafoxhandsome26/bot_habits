version: '3.8'

services:
  database:
    container_name: "postgres"
    image: postgres:15.2
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - DB_NAME=${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - ./db_data/:/var/lib/postgresql/data
    networks:
      - backend

  fastapi:
    container_name: "fastapi"
    build:
      context: .
      dockerfile: DockerfileFastAPI
    restart: always
    volumes:
      - ./.env:/src/.env
      - ./migrations:/src/migrations
      - ./alembic.ini:/src/alembic.ini
    entrypoint: sh -c "sleep 10 && alembic upgrade head && uvicorn main:app --host 0.0.0.0 --port 8000"
    ports:
      - "8000:8000"
    depends_on:
      - database
    networks:
      - backend

  bot:
    container_name: "bot"
    build:
      context: .
      dockerfile: DockerfileBot
    restart: always
    volumes:
      - ./.env:/src/.env
    entrypoint: sh -c "sleep 10 && python bot.py"
    ports:
      - "8080:8080"
    depends_on:
      - database
      - fastapi
    networks:
      - backend

networks:
  backend:
    driver: bridge
